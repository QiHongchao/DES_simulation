annotate("text", x = 4.75, y = 23.2, label = "*",size=5) +
annotate("text", x = 5, y = 25.2, label = "*",size=5) +
annotate("text", x = 5.75, y = 4.2, label = "*",size=5) +
annotate("text", x = 6.25, y = 6.2, label = "*",size=5) +
annotate("text", x = 7, y = 29.2, label = "*",size=5) +
annotate("text", x = 8.75, y = 42.2, label = "*",size=5) +
annotate("text", x = 9, y = 58.2, label = "*",size=5) +
annotate("text", x = 9.25, y = 31.2, label = "*",size=5) +
scale_y_continuous("Population attributable fraction (%)", breaks = c(-5,0,10,20,30,40,50,60),limits = c(-5,60))+
scale_x_continuous(breaks = c(1,2,3,4,5,6,7,8,9),limits = c(0.6,9.5),
labels = c("Overweight","Obesity","Abdominal obesity","Abnormal lipids","Hypertension",
"Diabetes", "Ever smoking", "Low education", "All risk factors"))+
labs(subtitle='C) Men') +
scale_color_manual("Group",values = c("#6BAED6","#4292C6","#2171B5")) +
scale_fill_manual("Group",values = c("#6BAED6","#4292C6","#2171B5"))
m
fig3 <- m +
labs(x = "") +
theme(legend.position="right") +
theme_classic()+
theme(axis.text.x = element_text(hjust = 0.9, angle = 40,margin = margin(t =-10),
colour = "black",size = 11),
axis.text.y = element_text(size = 10, colour = "black"),
axis.title = element_text(size = 12, colour = "black"),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.line.x =element_blank(),
legend.position = c(0.78, 0.9),
legend.title = element_text(color = "white", size = 1),
axis.title.x = element_text(size = 0.001),
legend.key.size = unit(0.3, 'cm'),
legend.spacing.x = unit(0.2, "cm"),
legend.text = element_text(size=10),
plot.margin = margin(0.2, 0.02, 0.02, 0.2, "cm"),
plot.subtitle=element_text(size=12, face = "bold", color='black')
)
fig1
fig2
fig3
fig_all <- fig1+fig2+fig3+plot_layout(ncol = 1)
fig_all
ggsave(filename = "fig_all.png", plot=fig_all, device = "png", dpi=600, height = 18, width = 10)
ggsave(filename = "fig_all.png", plot=fig_all, device = "png", dpi=600, height = 9, width = 5)
ggsave(filename = "fig_all.png", plot=fig_all, device = "png", dpi=600, height = 10, width = 6)
ggsave(filename = "fig_all.png", plot=fig_all, device = "png", dpi=600, height = 12, width = 8)
test <- data.frame(group = rep(0:1, each=100), baseline = NA, followup = NA)
set.seed(1234)
test$baseline <- rnorm(200, 0, 0.5)
test$followup <- 0.2*test$baseline+0.5*test$group+rnorm(200, 1, 0.2)
library(ggplot2)
ggplot(test, aes(x = baseline, y = followup, color = factor(group))) +
+xlab('Baseline') + ylab('Follow-up')+
geom_point()+theme_classic()+ geom_smooth(method = "lm", se = FALSE)
ggplot(test, aes(x = baseline, y = followup, color = factor(group))) +
xlab('Baseline') + ylab('Follow-up')+
geom_point()+theme_classic()+ geom_smooth(method = "lm", se = FALSE)
ggplot(test[test$y>0.5,], aes(x = baseline, y = followup, color = factor(group))) +
xlab('Baseline') + ylab('Follow-up')+
geom_point()+theme_classic()+ geom_smooth(method = "lm", se = FALSE)
ggplot(test[test$followup>0.5,], aes(x = baseline, y = followup, color = factor(group))) +
xlab('Baseline') + ylab('Follow-up')+
geom_point()+theme_classic()+ geom_smooth(method = "lm", se = FALSE)
ggplot(test[test$followup>0.5,], aes(x = baseline, y = followup, color = factor(group))) +
xlab('Baseline') + ylab('Follow-up')+ theme(axis. ticks = element_blank()) +
ggplot(test[test$followup>0.5,], aes(x = baseline, y = followup, color = factor(group))) +
xlab('Baseline') + ylab('Follow-up')+ theme(axis. ticks = element_blank()) +
ggplot(test[test$followup>0.5,], aes(x = baseline, y = followup, color = factor(group))) +
xlab('Baseline') + ylab('Follow-up')+ theme(axis.ticks.x = element_blank()) +
geom_point()+theme_classic()+ geom_smooth(method = "lm", se = FALSE)
ggplot(test[test$followup>0.5,], aes(x = baseline, y = followup, color = factor(group))) +
xlab('Baseline') + ylab('Follow-up')+ theme(axis.ticks = element_blank()) +
geom_point()+theme_classic()+ geom_smooth(method = "lm", se = FALSE)
ggplot(test[test$followup>0.5,], aes(x = baseline, y = followup, color = factor(group))) +
xlab('Baseline') + ylab('Follow-up')+
geom_point()+theme_classic()+ geom_smooth(method = "lm", se = FALSE) +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())
ggplot(test[test$followup>0.5,], aes(x = baseline, y = followup, color = factor(group))) +
xlab('Baseline') + ylab('Follow-up')+
geom_point()+theme_classic()+ geom_smooth(method = "lm", se = FALSE) +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank())
ggplot(test[test$followup>0.5,], aes(x = baseline, y = followup, color = factor(group))) +
xlab('Baseline') + ylab('Follow-up')+
geom_point()+theme_classic()+ geom_smooth(method = "lm", se = FALSE) +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank())
ggplot(test[test$followup>0.5,], aes(x = baseline, y = followup, color = factor(group))) +
xlab('Baseline') + ylab('Follow-up')+
geom_point()+theme_classic()+ geom_smooth(method = "lm", se = FALSE) +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
legend.position = element_blank())
ggplot(test[test$followup>0.5,], aes(x = baseline, y = followup, color = factor(group))) +
xlab('Baseline') + ylab('Follow-up')+
geom_point()+theme_classic()+ geom_smooth(method = "lm", se = FALSE) +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
legend.position = 'none')
ggsave('ancova.jpeg', height = 5, width =10)
ggsave('ancova.jpeg', height = 3, width =6)
predict(model_m, data.frame(interval_week=100, HGB_g_dL=13.5), 'response')
library(haven)
test <- read_dta('C:\\Research\\Cambridge\\DES_simulation\\men\\input\\blups_men_sample.dta')
test
load("C:/Users/hq227/Downloads/meta_df.RData")
load("C:/Users/hq227/Downloads/meta_df.RData")
View(dfdata)
View(dfdata)
View(dfdata)
View(dfdata)
table(dfdata$model)
library(meta)
install.packages("meta")
test <- dfdata[1:2,]
test
library(meta)
metagen(TE=test$HR, seTE=test$std.error, sm='HR')
metagen(TE=HR, seTE=std.error, sm='HR', data=test)
metagen(TE=HR, seTE=std.error, sm='HR', data=test, comb.random = T)
res <- metagen(TE=HR, seTE=std.error, sm='HR', data=test)
res$lower.random
res$text.w.fixed
res
res$TE.fixed
res$TE.random
res$TE.common
exp(res$TE.common)
class(dfdata$var)
dfdata$var <- factor(dfdata$var)
class(dfdata$var)
nlevels(dfdata$var)
levels(dfdata$var)
res
res$TE
res$TE.random
exp(res$lower.common)
dfdata$var <- factor(dfdata$var)
nlevels(dfdata$var)
metares <- NULL
for (i in 1:nlevels(dfdata$var)) {
datatmp <- dfdata[dfdata$var==levels(dfdata$var)[i],]
res <- metagen(TE=HR, seTE=std.error, sm='HR', data=datatmp)
restmp <- data.frame(mean=exp(res$TE.random), lower=exp(res$lower.random), upper=exp(res$upper.random))
metares <- rbind(metares, restmp)
}
for (i in 1:10) {
datatmp <- dfdata[dfdata$var==levels(dfdata$var)[i],]
res <- metagen(TE=HR, seTE=std.error, sm='HR', data=datatmp)
restmp <- data.frame(mean=exp(res$TE.random), lower=exp(res$lower.random), upper=exp(res$upper.random), var=levels(dfdata$var)[i])
metares <- rbind(metares, restmp)
}
dfdata$var <- factor(dfdata$var)
nlevels(dfdata$var)
metares <- NULL
dfdata$var <- factor(dfdata$var)
nlevels(dfdata$var)
metares <- NULL
for (i in 1:10) {
datatmp <- dfdata[dfdata$var==levels(dfdata$var)[i],]
res <- metagen(TE=HR, seTE=std.error, sm='HR', data=datatmp)
restmp <- data.frame(mean=exp(res$TE.random), lower=exp(res$lower.random), upper=exp(res$upper.random), var=levels(dfdata$var)[i])
metares <- rbind(metares, restmp)
}
metares
metares
View(dfdata)
test
res
res$pval.random
View(dfdata)
i
for (i in 1:10) {
datatmp <- dfdata[dfdata$var==levels(dfdata$var)[i],]
res <- metagen(TE=HR, seTE=std.error, sm='HR', data=datatmp)
restmp <- data.frame(mean=exp(res$TE.random), lower=exp(res$lower.random), upper=exp(res$upper.random), var=levels(dfdata$var)[i])
metares <- rbind(metares, restmp)
}
metares
metares <- NULL
##meta analysis
for (i in 1:nlevels(dfdata$var)) {
datatmp <- dfdata[dfdata$var==levels(dfdata$var)[i],]
res <- metagen(TE=HR, seTE=std.error, sm='HR', data=datatmp)
restmp <- data.frame(mean=exp(res$TE.random), lower=exp(res$lower.random), upper=exp(res$upper.random), var=levels(dfdata$var)[i])
metares <- rbind(metares, restmp)
}
for (i in 1:10) {
datatmp <- dfdata[dfdata$var==levels(dfdata$var)[i],]
res <- metagen(TE=HR, seTE=std.error, sm='HR', data=datatmp)
restmp <- data.frame(mean=res$TE.random, lower=res$lower.random, upper=res$upper.random, var=levels(dfdata$var)[i])
metares <- rbind(metares, restmp)
}
metares
dfdata$var <- factor(dfdata$var)
nlevels(dfdata$var)
metares <- NULL
# ##meta analysis
# for (i in 1:nlevels(dfdata$var)) {
#   datatmp <- dfdata[dfdata$var==levels(dfdata$var)[i],]
#   res <- metagen(TE=HR, seTE=std.error, sm='HR', data=datatmp)
#   restmp <- data.frame(mean=exp(res$TE.random), lower=exp(res$lower.random), upper=exp(res$upper.random), var=levels(dfdata$var)[i])
#   metares <- rbind(metares, restmp)
# }
# metares
for (i in 1:10) {
datatmp <- dfdata[dfdata$var==levels(dfdata$var)[i],]
res <- metagen(TE=HR, seTE=std.error, sm='HR', data=datatmp)
restmp <- data.frame(mean=res$TE.random, lower=res$lower.random, upper=res$upper.random, var=levels(dfdata$var)[i])
metares <- rbind(metares, restmp)
}
metares
head(dfdata)
head(dfdata, 20)
metares
sum(dfdata$HR.ll>0)
for (i in 1:10) {
datatmp <- dfdata[dfdata$var==levels(dfdata$var)[i],]
res <- metagen(TE=log(datatmp$HR), seTE=(datatmp$HR.ul-datatmp$HR.ll)/(2*1.96), sm='HR')
restmp <- data.frame(mean=res$TE.random, lower=res$lower.random, upper=res$upper.random, var=levels(dfdata$var)[i])
metares <- rbind(metares, restmp)
}
metares
for (i in 1:10) {
datatmp <- dfdata[dfdata$var==levels(dfdata$var)[i],]
res <- metagen(TE=log(datatmp$HR), seTE=(datatmp$HR.ul-datatmp$HR.ll)/(2*1.96), sm='HR')
restmp <- data.frame(mean=exp(res$TE.random), lower=exp(res$lower.random), upper=exp(res$upper.random), var=levels(dfdata$var)[i])
metares <- rbind(metares, restmp)
}
metares
metares <- NULL
for (i in 1:10) {
datatmp <- dfdata[dfdata$var==levels(dfdata$var)[i],]
res <- metagen(TE=log(datatmp$HR), seTE=(datatmp$HR.ul-datatmp$HR.ll)/(2*1.96), sm='HR')
restmp <- data.frame(mean=exp(res$TE.random), lower=exp(res$lower.random), upper=exp(res$upper.random), var=levels(dfdata$var)[i])
metares <- rbind(metares, restmp)
}
metares
dfdata
library(readstata13); library(MASS); library(flexsurv); library(simsurv)
overwrite <- "TRUE"
setwd('C:/Research/Cambridge/DES_simulation')
source("./blooddonor_des.R")
## Read-in covariate distribution
covs<-read.dta13("./men/input/covs_blups_men_v2.dta")
blups<-read.dta13("./men/input/blups_only_men_v2.dta")
head(covs)
table(covs)
table(covs$id)
covs[covs$id==6035,]
test <- covs
test[3241:3243,]
test$newid <- 1:nrow(test)
lmm_test <- lmer(hb ~ factor(age)+factor(blood)+eth+(1|newid), data=test)
library(lme4)
lmm_test <- lmer(hb ~ factor(age)+factor(blood)+eth+(1|newid), data=test)
lmm_test <- lmer(hb ~ factor(age)+factor(blood)+eth+(1|id), data=test)
ranef_test <- ranef(lmm_test)
ranef_test <- as.data.frame(ranef_test)
ranef_test[3241:3243,]
##Packages
library(lme4)
library(ggplot2)
##Set the working directory
setwd("C:\\Research\\Cambridge\\Post-donation-Hb\\Data")
##Import the data
df_baseline <- read.csv('df_baseline.csv')
df_ana <- read.csv("df_ana.csv")
df_ana_pdt <- read.csv("df_ana_pdt.csv")
nrow(df_baseline)
nrow(df_ana)
nrow(df_ana_pdt)
nlevels(factor(df_baseline$identifier))
nlevels(factor(df_ana$identifier))
nlevels(factor(df_ana_pdt$identifier))
##categorical age
df_ana$agecat[df_ana$agePulse<25] <- '<25'
df_ana$agecat[df_ana$agePulse>=25&df_ana$agePulse<35] <- '25-34'
df_ana$agecat[df_ana$agePulse>=35&df_ana$agePulse<45] <- '35-44'
df_ana$agecat[df_ana$agePulse>=45&df_ana$agePulse<55] <- '45-54'
df_ana$agecat[df_ana$agePulse>=55&df_ana$agePulse<65] <- '55-64'
df_ana$agecat[df_ana$agePulse>=65] <- '65+'
##white
table(df_ana$ethnicDesc)
length(df_baseline$ethnicDesc[df_baseline$sexPulse==1&df_baseline$ethnicDesc%in%
c('Eng/W/Scot/NI/Brit', 'White Irish', 'Other White backgrnd')])/
length(df_baseline$ethnicDesc[df_baseline$sexPulse==1])
length(df_baseline$ethnicDesc[df_baseline$sexPulse==2&df_baseline$ethnicDesc%in%
c('Eng/W/Scot/NI/Brit', 'White Irish', 'Other White backgrnd')])/
length(df_baseline$ethnicDesc[df_baseline$sexPulse==2])
df_ana$white[df_ana$ethnicDesc%in%c('Eng/W/Scot/NI/Brit', 'White Irish', 'Other White backgrnd')] <- 'Yes'
df_ana$white[!(df_ana$ethnicDesc%in%c('Eng/W/Scot/NI/Brit', 'White Irish', 'Other White backgrnd'))] <- 'No'
##time from baseline
for (i in 1:nlevels(factor(df_ana$identifier))) {
df_ana$time[factor(df_ana$identifier)==levels(factor(df_ana$identifier))[i]] <-
round(as.numeric(difftime(df_ana$donationDate[factor(df_ana$identifier)==levels(factor(df_ana$identifier))[i]],
df_ana$donationDate[factor(df_ana$identifier)==levels(factor(df_ana$identifier))[i]][1],
units = 'weeks')), 1)
}
##read dataset for linear mixed model
df_ana_lmm <- read.csv('df_ana_lmm.csv')
head(df_ana_lmm)
##read dataset for linear mixed model
df_ana_lmm <- read.csv('df_ana_lmm.csv')
##Spaghetti plots
ggplot(data = df_ana_lmm, aes(x = time, y = HGB_g_dL, group = identifier))+
geom_line() + facet_grid(. ~ sexPulse)
##Spaghetti plots
ggplot(data = df_ana_lmm, aes(x = time, y = HGB_g_dL, group = identifier))+
geom_line() + facet_grid(. ~ sexPulse) + labs(x='weeks')
head(covs)
head(df_ana_lmm)
table(df_ana_lmm)
table(df_ana_lmm$agecat)
stpmmen
## Read-in covariate distribution
covs<-read.dta13("./men/input/covs_blups_men_v2.dta")
library(readstata13); library(MASS); library(flexsurv); library(simsurv)
overwrite <- "TRUE"
setwd('C:/Research/Cambridge/DES_simulation')
source("./blooddonor_des.R")
## Read-in covariate distribution
covs<-read.dta13("./men/input/covs_blups_men_v2.dta")
blups<-read.dta13("./men/input/blups_only_men_v2.dta")
## fitting flexible parametric model to observed data; used to inform simulated time to return
## importing stata data
stpmmen<-read.dta13("./men/input/stpm_men.dta")
head(covs)
head(covs[1:2,])
head(blups[1:2,])
head(stpmmen[1:2,])
##Packages
library(lme4)
library(ggplot2)
##Set the working directory
setwd("C:\\Research\\Cambridge\\Post-donation-Hb\\Data")
##Import the data
df_baseline <- read.csv('df_baseline.csv')
df_ana <- read.csv("df_ana.csv")
df_ana_pdt <- read.csv("df_ana_pdt.csv")
head(df_baseline)
blups[946,]
summary(stpmmen$newdiffv)
217/(24*7)
nrow(covs)
nrow(stpmmen)
names(covs)[52]
ncol(covs)
##Packages
library(lme4)
library(ggplot2)
##Set the working directory
setwd("C:\\Research\\Cambridge\\Post-donation-Hb\\Data")
##Data cleaning
{
# ##categorical age
# df_ana$agecat[df_ana$agePulse<25] <- '<25'
# df_ana$agecat[df_ana$agePulse>=25&df_ana$agePulse<35] <- '25-34'
# df_ana$agecat[df_ana$agePulse>=35&df_ana$agePulse<45] <- '35-44'
# df_ana$agecat[df_ana$agePulse>=45&df_ana$agePulse<55] <- '45-54'
# df_ana$agecat[df_ana$agePulse>=55&df_ana$agePulse<65] <- '55-64'
# df_ana$agecat[df_ana$agePulse>=65] <- '65+'
#
##white
# table(df_ana$ethnicDesc)
# length(df_baseline$ethnicDesc[df_baseline$sexPulse==1&df_baseline$ethnicDesc%in%
#                                 c('Eng/W/Scot/NI/Brit', 'White Irish', 'Other White backgrnd')])/
#   length(df_baseline$ethnicDesc[df_baseline$sexPulse==1])
# length(df_baseline$ethnicDesc[df_baseline$sexPulse==2&df_baseline$ethnicDesc%in%
#                                 c('Eng/W/Scot/NI/Brit', 'White Irish', 'Other White backgrnd')])/
#   length(df_baseline$ethnicDesc[df_baseline$sexPulse==2])
# df_ana$white[df_ana$ethnicDesc%in%c('Eng/W/Scot/NI/Brit', 'White Irish', 'Other White backgrnd')] <- 'Yes'
# df_ana$white[!(df_ana$ethnicDesc%in%c('Eng/W/Scot/NI/Brit', 'White Irish', 'Other White backgrnd'))] <- 'No'
##time from baseline
# for (i in 1:nlevels(factor(df_ana$identifier))) {
#   df_ana$time[factor(df_ana$identifier)==levels(factor(df_ana$identifier))[i]] <-
#     round(as.numeric(difftime(df_ana$donationDate[factor(df_ana$identifier)==levels(factor(df_ana$identifier))[i]],
#                         df_ana$donationDate[factor(df_ana$identifier)==levels(factor(df_ana$identifier))[i]][1],
#                         units = 'weeks')), 1)
# }
#
# ##save dataset for linear mixed model
# # df_ana_lmm <-df_ana[,c('HGB_g_dL', 'agePulse', 'agecat', 'ABORH', 'white', 'baseline', 'time', 'sexPulse', 'identifier')]
# # write.csv(df_ana_lmm, 'df_ana_lmm.csv', row.names = F)
}
##read dataset for linear mixed model
df_ana_lmm <- read.csv('df_ana_lmm.csv')
head(df_ana_lmm)
df_ana <- read.csv('df_ana.csv')
nrow(df_ana)
nrow(df_ana_lmm)
head(df_ana)
covs <- data.frame()
covs
covs$age
library(readstata13); library(MASS); library(flexsurv); library(simsurv)
overwrite <- "TRUE"
setwd('C:/Research/Cambridge/DES_simulation')
source("./blooddonor_des.R")
#############
#### MEN ####
#############
## Read-in covariate distribution
covs<-read.dta13("./men/input/covs_blups_men_v2.dta")
table(covs)
table(covs$age)
##create covs data set
covs <- data.frame()
covs$age[df_ana_lmm$agecat=='<25'] <- 0
##create covs data set
covs <- data.frame(NA, nrow = nrow(df_ana_lmm))
head(covs)
##create covs data set
covs <- data.frame()
covs$exage <- df_ana_lmm$agePulse
covs$exage <- df_ana_lmm$agePulse
##create covs data set
covs <- NULL
covs$exage <- df_ana_lmm$agePulse
class(covs)
##create covs data set
covs <- data.frame(NULL)
covs$exage <- df_ana_lmm$agePulse
##create covs data set
covs <- data.frame(exage = df_ana_lmm$agePulse)
class(covs)
##age cat
covs$age[covs$agePulse<25] <- 0
covs$age[covs$agePulse>=25&covs$agePulse<35] <- 1
covs$age[covs$agePulse>=35&covs$agePulse<45] <- 2
covs$age[covs$agePulse>=45&covs$agePulse<55] <- 3
covs$age[covs$agePulse>=55&covs$agePulse<65] <- 4
covs$age[covs$agePulse>=65] <- 5
##create covs data set
##exact age
covs <- data.frame(exage = df_ana$agePulse)
##age cat
covs$age <- NA
covs$age[covs$agePulse<25] <- 0
covs$age[covs$agePulse>=25&covs$agePulse<35] <- 1
covs$age[covs$agePulse>=35&covs$agePulse<45] <- 2
covs$age[covs$agePulse>=45&covs$agePulse<55] <- 3
covs$age[covs$agePulse>=55&covs$agePulse<65] <- 4
covs$age[covs$agePulse>=65] <- 5
table(covs$exage)
table(covs$age)
##age cat
covs$age <- NA
covs$age[covs$agePulse<25] <- 0
covs$age[covs$agePulse>=25&covs$agePulse<35] <- 1
covs$age[covs$agePulse>=35&covs$agePulse<45] <- 2
covs$age[covs$agePulse>=45&covs$agePulse<55] <- 3
covs$age[covs$agePulse>=55&covs$agePulse<65] <- 4
covs$age[covs$agePulse>=65] <- 5
head(covs$age)
class(covs$exage)
##create covs data set
##exact age
covs <- data.frame(exage = df_ana$agePulse)
##age cat
covs$age <- NA
covs$age[covs$exage<25] <- 0
covs$age[covs$exage>=25&covs$exage<35] <- 1
covs$age[covs$exage>=35&covs$exage<45] <- 2
covs$age[covs$exage>=45&covs$exage<55] <- 3
covs$age[covs$exage>=55&covs$exage<65] <- 4
covs$age[covs$exage>=65] <- 5
table(covs$age)
##hb
covs$hb <- df_ana$HGB_g_dL
##eth
covs$eth <- NA
covs$eth <- NULL
##eth
covs$eth[df_ana$ethnicDesc%in%c('Eng/W/Scot/NI/Brit', 'White Irish', 'Other White backgrnd')] <- 0
##exact age
covs <- data.frame(exage = df_ana$agePulse)
##eth
covs$eth[df_ana$ethnicDesc%in%c('Eng/W/Scot/NI/Brit', 'White Irish', 'Other White backgrnd')] <- 0
covs$age[covs$exage<25] <- 0
covs$age[covs$exage>=25&covs$exage<35] <- 1
covs$age[covs$exage>=35&covs$exage<45] <- 2
covs$age[covs$exage>=45&covs$exage<55] <- 3
covs$age[covs$exage>=55&covs$exage<65] <- 4
head(covs)
##exact age
covs <- data.frame(exage = df_ana$agePulse)
head(covs)
##age cat
covs$age[covs$exage<25] <- 0
covs$age[covs$exage>=25&covs$exage<35] <- 1
covs$age[covs$exage>=35&covs$exage<45] <- 2
covs$age[covs$exage>=45&covs$exage<55] <- 3
covs$age[covs$exage>=55&covs$exage<65] <- 4
covs$age[covs$exage>=65] <- 5
##hb
covs$hb <- df_ana$HGB_g_dL
##eth
covs$eth[df_ana$ethnicDesc%in%c('Eng/W/Scot/NI/Brit', 'White Irish', 'Other White backgrnd')] <- 0
head(covs)
table(covs$eth)
covs$eth[!(df_ana$ethnicDesc%in%c('Eng/W/Scot/NI/Brit', 'White Irish', 'Other White backgrnd'))] <- 1
table(covs$eth)
table(df_ana$ABORH)
